name: Move issue to correct status on commit

on:
  push:
    branches:
      - '**'

permissions:
  contents: write
  packages: write

jobs:

  check-commit:
    name: Vérification des commits
    runs-on: ubuntu-latest
    outputs:
      ref_issues: ${{ steps.extract_refs.outputs.ref_issues }}
      closed_issues: ${{ steps.extract_refs.outputs.closed_issues }}
    steps:
      - uses: actions/checkout@v3

      - name: Extract issue references
        id: extract_refs
        run: |
          # Récupérer le message du commit
          COMMIT_MSG="${{ github.event.head_commit.message }}"
          
          # Extraire les références d'issues (format: refs #123)
          REF_ISSUES=$(echo "$COMMIT_MSG" | grep -oP 'refs\s*#\K\d+' | tr '\n' ' ')
          
          # Extraire les fermetures d'issues (format: closes #123, fixed #456)
          CLOSED_ISSUES=$(echo "$COMMIT_MSG" | grep -oP '(?:closes|closed|fixes|fixed)\s*#\K\d+' | tr '\n' ' ')
          
          # Fusionner et trier les numéros uniques
          ALL_ISSUES=$(echo -e "$REF_ISSUES\n$CLOSED_ISSUES" | sort -n | uniq | tr '\n' ' ')
          
          # Afficher les résultats
          echo "Issues référencées: $REF_ISSUES"
          echo "Issues fermées: $CLOSED_ISSUES"
          echo "Toutes les issues uniques: $ALL_ISSUES"
          
          # Définir les sorties
          echo "ref_issues=$REF_ISSUES" >> $GITHUB_OUTPUT
          echo "closed_issues=$CLOSED_ISSUES" >> $GITHUB_OUTPUT
          echo "all_issues=$ALL_ISSUES" >> $GITHUB_OUTPUT
          
  move-projects-to-in-progress:
    name: Projet vers "In-Progress"
    runs-on: ubuntu-latest
    needs: check-commit
    steps:

      - uses: actions/checkout@v3

      - name: Find project from commit
        run: |
          curl -s \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Accept: application/vnd.github.v3+json" \
          "https://api.github.com/repos/${{ github.repository_owner }}/${{ github.event.repository.name }}/issues" | \
          jq "map(select(.number == ${{ needs.check-commit.outputs.ref_issues }})) | [.[] | {id, number, title}]"

  move-projects-to-done:
    name: Projet vers "Done"
    runs-on: ubuntu-latest
    needs: check-commit
    steps:

      - uses: actions/checkout@v3

      - name: Find project from commit
        run: |
          curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -H "Accept: application/vnd.github.v3+json" "https://api.github.com/repos/${{ github.repository_owner }}/${{ github.event.repository.name }}/issues" | jq "map(select(.number == ${{ needs.check-commit.outputs.ref_issues }} ) | [.[] | {id, number, title}]"
          

